// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  projects  Project[] @relation("OwnerProjects")
  memberships Membership[]
  tasks     Task[]    @relation("AssignedTasks")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Project {
  id        String    @id @default(uuid())
  name      String    @unique
  ownerId   String
  owner     User      @relation("OwnerProjects", fields: [ownerId], references: [id])
  tasks     Task[]
  members   Membership[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String
  status      String   @default("todo") // todo | in-progress | done
  projectId   String
  project     Project  @relation(fields: [projectId], references: [id])
  assigneeId  String?  
  assignee    User?    @relation("AssignedTasks", fields: [assigneeId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Membership {
  id        String    @id @default(uuid())
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  projectId String
  project   Project   @relation(fields: [projectId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([userId, projectId])
}


